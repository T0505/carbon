<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.carbon.bid.mapper.BidComplaintFilesMapper">
    
    <resultMap type="BidComplaintFiles" id="BidComplaintFilesResult">
        <result property="id"    column="id"    />
        <result property="complaintId"    column="complaint_id"    />
        <result property="fileName"    column="file_name"    />
        <result property="filePath"    column="file_path"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectBidComplaintFilesVo">
        select id, complaint_id, file_name, file_path, create_time, update_by, update_time, remark from bid_complaint_files
    </sql>

    <select id="selectBidComplaintFilesList" parameterType="BidComplaintFiles" resultMap="BidComplaintFilesResult">
        <include refid="selectBidComplaintFilesVo"/>
        <where>  
            <if test="complaintId != null "> and complaint_id = #{complaintId}</if>
            <if test="fileName != null  and fileName != ''"> and file_name like concat('%', #{fileName}, '%')</if>
            <if test="filePath != null  and filePath != ''"> and file_path = #{filePath}</if>
        </where>
    </select>
    
    <select id="selectBidComplaintFilesById" parameterType="Long" resultMap="BidComplaintFilesResult">
        <include refid="selectBidComplaintFilesVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertBidComplaintFiles" parameterType="BidComplaintFiles">
        insert into bid_complaint_files
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="complaintId != null">complaint_id,</if>
            <if test="fileName != null">file_name,</if>
            <if test="filePath != null">file_path,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="complaintId != null">#{complaintId},</if>
            <if test="fileName != null">#{fileName},</if>
            <if test="filePath != null">#{filePath},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateBidComplaintFiles" parameterType="BidComplaintFiles">
        update bid_complaint_files
        <trim prefix="SET" suffixOverrides=",">
            <if test="complaintId != null">complaint_id = #{complaintId},</if>
            <if test="fileName != null">file_name = #{fileName},</if>
            <if test="filePath != null">file_path = #{filePath},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBidComplaintFilesById" parameterType="Long">
        delete from bid_complaint_files where id = #{id}
    </delete>

    <delete id="deleteBidComplaintFilesByIds" parameterType="String">
        delete from bid_complaint_files where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>